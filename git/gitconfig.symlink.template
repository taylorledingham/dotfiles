[user]
  name = AUTHORNAME
  email = AUTHOREMAIL

[alias]
    lol = log --graph --decorate --pretty=oneline --abbrev-commit
    lola = log --graph --decorate --pretty=oneline --abbrev-commit --all
    lg = log --graph\n--pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset'\n--abbrev-commit --date=relative
    lgp = log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit -p
    st = status
    s = status
    ci = commit
    co = checkout
    pur = pull --rebase
    dag = log --graph --format='format:%C(yellow)%h%C(reset) %C(blue)\"%an\" <%ae>%C(reset) %C(magenta)%cr%C(reset)%C(auto)%d%C(reset)%n%s' --date-order
    co            = checkout
    br            = branch
    df            = diff
    amend         = commit --amend
    rs	= git reset --hard HEAD
    up            = pull --rebase
    diffstat      = diff --stat -r
    sshow = "!f() { git stash show stash^{/$*} -p; }; f"
    sapply = "!f() { git stash apply stash^{/$*}; }; f"
    up = !git pull -p && git submodule update
    st   = status -sb --ignore-submodules=untracked
	pr   = pull-request

  # Checks out master and deletes the previous branch
  resume = "!export BRANCH=$(git bn); git co master; git branch -D $BRANCH"

  wipe = "!git status --untracked-files=no --short; read -p 'Are you sure about this? ' yn; if [[ $yn =~ [Yy] ]]; then git reset --hard HEAD; fi"
  rlog = !git --no-pager log --reverse --format=format:%s `git log --grep=build -1 --format=format:%H`..
  v = !git describe --long --tags | cut -f 1 -d "-"

[color]
  interactive = auto
  status = auto

[core]
  excludesfile = ~/.gitignore
  
[mergetool "sourcetree"]
	cmd = /Applications/SourceTree.app/Contents/Resources/opendiff-w.sh \"$LOCAL\" \"$REMOTE\" -ancestor \"$BASE\" -merge \"$MERGED\"
	trustExitCode = true

[push]
  default = simple
